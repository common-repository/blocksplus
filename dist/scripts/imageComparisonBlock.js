!function i(l,c,o){function r(t,e){if(!c[t]){if(!l[t]){var a="function"==typeof require&&require;if(!e&&a)return a(t,!0);if(n)return n(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}a=c[t]={exports:{}},l[t][0].call(a.exports,function(e){return r(l[t][1][e]||e)},a,a.exports,i,l,c,o)}return c[t].exports}for(var n="function"==typeof require&&require,e=0;e<o.length;e++)r(o[e]);return r}({1:[function(e,t,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.edit=void 0;var i=wp.editor,c=i.MediaUpload,o=i.MediaUploadCheck,r=i.MediaPlaceholder,n=i.BlockControls,s=i.InspectorControls,m=i.ColorPalette,u=wp.element.Fragment,i=wp.components,g=i.Toolbar,p=i.PanelBody,d=i.Button,b=i.RangeControl,f=i.ColorIndicator;a.edit=function(e){var a=e.attributes,i=e.setAttributes;function t(e,t){return a.imageOne?React.createElement("img",{src:a.imageOne.imageSrc,onClick:e,className:"image ".concat(null!=t?"blocksplus-editor-image-comparison-block__half-width":"")}):React.createElement("div",{className:"".concat(null!=t?"blocksplus-editor-image-comparison-block__half-width":"")},React.createElement(r,{onSelect:function(e){i({imageOne:{imageAlt:e.alt,imageSrc:e.url}})},allowedTypes:["image"],multiple:!1,labels:{title:"Upload"}}))}function l(e,t){return a.imageTwo?React.createElement("img",{src:a.imageTwo.imageSrc,onClick:e,className:"image ".concat(null!=t?"blocksplus-editor-image-comparison-block__half-width":"")}):React.createElement("div",{className:"".concat(null!=t?"blocksplus-editor-image-comparison-block__half-width":"")},React.createElement(r,{onSelect:function(e){i({imageTwo:{imageAlt:e.alt,imageSrc:e.url}})},allowedTypes:["image"],multiple:!1,labels:{title:"Upload"}}))}e=[{icon:"align-pull-left",title:"Initial positions",isActive:"initial"===a.imagesPosition,onClick:function(){return i({imagesPosition:"initial"})}},{icon:"align-pull-right",title:"Reverse positions",isActive:"reverse"===a.imagesPosition,onClick:function(){return i({imagesPosition:"reverse"})}}];return React.createElement(u,null,React.createElement(s,{className:"blocksplus-editor-image-comparison-block__inspector"},React.createElement(p,{title:"Images settings"},React.createElement("p",null,React.createElement("strong",null,"Select images to compare:")),React.createElement("div",{className:"blocksplus-editor-image-comparison-block__sidebar-images ".concat("initial"!=a.imagesPosition?"--reverse":"")},React.createElement("div",{className:"blocksplus-editor-image-comparison-block__sidebar-image"},React.createElement(o,null,React.createElement(c,{onSelect:function(e){i({imageOne:{imageAlt:e.alt,imageSrc:e.url}})},type:"image",render:function(e){return t(e.open)}}),React.createElement(d,{onClick:function(){i({imageOne:null})},isLink:!0,isDestructive:!0,className:"blocksplus-editor-image-comparison-block__sidebar-remove"},"Remove image"))),React.createElement("div",{className:"blocksplus-editor-image-comparison-block__sidebar-image"},React.createElement(o,null,React.createElement(c,{onSelect:function(e){i({imageTwo:{imageAlt:e.alt,imageSrc:e.url}})},type:"image",render:function(e){return l(e.open)}}),React.createElement(d,{onClick:function(){i({imageTwo:null})},isLink:!0,isDestructive:!0,className:"blocksplus-editor-image-comparison-block__sidebar-remove"},"Remove image"))))),React.createElement(p,{title:"Color settings"},React.createElement("p",null,"Select a Slider color: ",React.createElement(f,{colorValue:a.sliderColor})),React.createElement(m,{value:a.sliderColor,onChange:function(e){i(e?{sliderColor:e}:{sliderColor:"#ffffff"})}})),React.createElement(p,{title:"Opacity settings"},React.createElement("p",null,"Select a Slider opacity:"),React.createElement(b,{value:a.sliderOpacity,onChange:function(e){i({sliderOpacity:e})},min:0,max:1,step:.05}))),React.createElement(n,null,React.createElement(g,{controls:e})),React.createElement("div",null,React.createElement("div",{className:"blocksplus-editor-image-comparison-block__images ".concat("initial"!=a.imagesPosition?"--reverse":"")},React.createElement(o,null,React.createElement(c,{onSelect:function(e){i({imageOne:{imageAlt:e.alt,imageSrc:e.url}})},type:"image",render:function(e){return t(e.open,!0)}})),React.createElement(o,null,React.createElement(c,{onSelect:function(e){i({imageTwo:{imageAlt:e.alt,imageSrc:e.url}})},type:"image",render:function(e){return l(e.open,!0)}})))))}},{}],2:[function(e,t,a){"use strict";var i=e("./edit"),e=e("./save");(0,wp.blocks.registerBlockType)("blocksplus/image-comparison-block",{title:"BlocksPlus: Image Comparison",description:"Image Comparison block with slider option to compare images",icon:"format-gallery",category:"layout",attributes:{imageOne:{imageAlt:{attribute:"alt",selector:".image"},imageSrc:{attribute:"src",selector:".image"}},imageTwo:{imageAlt:{attribute:"alt",selector:".image"},imageSrc:{attribute:"src",selector:".image"}},imagesPosition:{type:"string",default:"initial"},sliderColor:{type:"string",default:"#ffffff"},sliderOpacity:{type:"number",default:.85}},edit:i.edit,save:e.save})},{"./edit":1,"./save":3}],3:[function(e,t,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.save=void 0;a.save=function(e){var e=e.attributes,t=e.imageOne?e.imageOne.imageSrc:"",a=e.imageTwo?e.imageTwo.imageSrc:"";return React.createElement("div",null,React.createElement("div",{className:"wp-block-blocksplus-image-comparison-block__image"},React.createElement("img",{src:"initial"==e.imagesPosition?a:t})),React.createElement("div",{className:"wp-block-blocksplus-image-comparison-block__slider",style:{opacity:e.sliderOpacity}},React.createElement("div",{className:"wp-block-blocksplus-image-comparison-block__slider-line",style:{backgroundColor:e.sliderColor}}),React.createElement("div",{className:"wp-block-blocksplus-image-comparison-block__slider-circle",style:{backgroundColor:e.sliderColor}})),React.createElement("div",{className:"wp-block-blocksplus-image-comparison-block__image"},React.createElement("img",{src:"initial"==e.imagesPosition?t:a})))}},{}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
