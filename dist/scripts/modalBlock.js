!function n(r,l,c){function i(e,t){if(!l[e]){if(!r[e]){var o="function"==typeof require&&require;if(!t&&o)return o(e,!0);if(u)return u(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}o=l[e]={exports:{}},r[e][0].call(o.exports,function(t){return i(r[e][1][t]||t)},o,o.exports,n,r,l,c)}return l[e].exports}for(var u="function"==typeof require&&require,t=0;t<c.length;t++)i(c[t]);return i}({1:[function(t,e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.deprecated=void 0;var n=wp.components.Button,r=wp.editor.RichText,l=wp.blockEditor.InnerBlocks;o.deprecated=[{attributes:{buttonText:{type:"string"},buttonTextSize:{type:"number"},buttonTextColor:{type:"string"},buttonBgColor:{type:"string"},buttonPosition:{type:"string",default:"flex-start"}},save:function(t){t=t.attributes;return React.createElement("div",{className:"wp-block-blocksplus-modal-block"},React.createElement("div",{className:"wp-block-blocksplus-modal-block__button-wrapper",style:{justifyContent:t.buttonPosition}},React.createElement(n,{className:"wp-block-blocksplus-modal-block__button",isDefault:!0,style:{fontSize:Number.isInteger(t.buttonTextSize)&&t.buttonTextSize,color:t.buttonTextColor,backgroundColor:t.buttonBgColor}},React.createElement(r.Content,{value:t.buttonText}))),React.createElement("div",{className:"wp-block-blocksplus-modal-block__modal"},React.createElement("div",{className:"wp-block-blocksplus-modal-block__content"},React.createElement("span",{className:"wp-block-blocksplus-modal-block__close"},"×"),React.createElement(l.Content,null))))}}]},{}],2:[function(t,e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.edit=void 0;var r=n(t("../../components/BlocksPlusFontSizePicker")),l=n(t("../../components/BlocksPlusColorPicker"));function n(t){return t&&t.__esModule?t:{default:t}}var c=wp.components.Toolbar,t=wp.editor,i=t.RichText,u=t.InspectorControls,a=t.BlockControls,s=wp.blockEditor.InnerBlocks,b=wp.element.Fragment,p=wp.data.useSelect;o.edit=function(t){var e=t.attributes,o=t.setAttributes,t=p(function(t){return t("core").getThemeSupports()}),n=[];t["editor-font-sizes"]&&t["editor-font-sizes"].map(function(t){n.push({name:t.name,slug:t.slug,size:t.size})}),void 0===e.buttonTextColor&&o({buttonTextColor:"#222222"}),void 0===e.buttonBgColor&&o({buttonBgColor:"#ffffff"});t=[{icon:"align-left",title:"Align button to left",isActive:"flex-start"===e.buttonPosition,onClick:function(){return o({buttonPosition:"flex-start"})}},{icon:"align-center",title:"Align button to center",isActive:"center"===e.buttonPosition,onClick:function(){return o({buttonPosition:"center"})}},{icon:"align-right",title:"Align button to right",isActive:"flex-end"===e.buttonPosition,onClick:function(){return o({buttonPosition:"flex-end"})}}];return React.createElement(b,null,React.createElement(u,null,React.createElement(l.default,{title:"Color settings (button)",textColor:e.buttonTextColor,textColorCallback:function(t){o({buttonTextColor:t})},textLabel:"Text color",bgColor:e.buttonBgColor,bgColorCallback:function(t){o({buttonBgColor:t})},bgLabel:"Background color"}),React.createElement(r.default,{title:"Typography",selectedFontSize:e.buttonTextSize,fontSizes:n,fontPickerCallback:function(t){o({buttonTextSize:t})}})),React.createElement(a,null,React.createElement(c,{controls:t})),React.createElement("div",null,React.createElement("div",{className:"blocksplus-editor-modal-block__button-wrapper wp-block-button",style:{justifyContent:e.buttonPosition}},React.createElement(i,{allowedFormats:[],className:"blocksplus-editor-modal-block__button wp-block-button__link",placeholder:"Button text",value:e.buttonText,onChange:function(t){o({buttonText:t})},style:{fontSize:"number"==typeof e.buttonTextSize&&e.buttonTextSize,color:e.buttonTextColor&&e.buttonTextColor,backgroundColor:e.buttonBgColor&&e.buttonBgColor}})),React.createElement("div",null,React.createElement(s,null))))}},{"../../components/BlocksPlusColorPicker":5,"../../components/BlocksPlusFontSizePicker":6}],3:[function(t,e,o){"use strict";var n=t("./edit"),r=t("./save"),t=t("./deprecated");(0,wp.blocks.registerBlockType)("blocksplus/modal-block",{title:"BlocksPlus: Modal",description:"Modal block with button to open modal with content",icon:"feedback",category:"layout",attributes:{buttonText:{type:"string"},buttonTextSize:{type:"number"},buttonTextColor:{type:"string"},buttonBgColor:{type:"string"},buttonPosition:{type:"string",default:"flex-start"}},edit:n.edit,save:r.save,deprecated:t.deprecated})},{"./deprecated":1,"./edit":2,"./save":4}],4:[function(t,e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.save=void 0;var n=wp.editor.RichText,r=wp.blockEditor.InnerBlocks;o.save=function(t){t=t.attributes;return React.createElement("div",{className:"wp-block-blocksplus-modal-block"},React.createElement("div",{className:"wp-block-blocksplus-modal-block__button-wrapper wp-block-button",style:{justifyContent:t.buttonPosition}},React.createElement(n.Content,{tagName:"a",className:"wp-block-blocksplus-modal-block__button wp-block-button__link",style:{fontSize:Number.isInteger(t.buttonTextSize)&&t.buttonTextSize,color:t.buttonTextColor,backgroundColor:t.buttonBgColor},value:t.buttonText})),React.createElement("div",{className:"wp-block-blocksplus-modal-block__modal"},React.createElement("div",{className:"wp-block-blocksplus-modal-block__content"},React.createElement("span",{className:"wp-block-blocksplus-modal-block__close"},"×"),React.createElement(r.Content,null))))}},{}],5:[function(t,e,o){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function c(t,e){return(c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function i(o){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=u(o),e=(t=n?(t=u(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments),this);if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var a=wp.element.Component,s=wp.blockEditor.PanelColorSettings,n=function(){var t=r,e=a;if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e);var o,n=i(r);function r(){var t=this,e=r;if(t instanceof e)return n.apply(this,arguments);throw new TypeError("Cannot call a class as a function")}return t=r,(e=[{key:"render",value:function(){return React.createElement(s,{title:this.props.title,colorSettings:[{value:this.props.textColor,onChange:this.props.textColorCallback,label:this.props.textLabel},{value:this.props.bgColor,onChange:this.props.bgColorCallback,label:this.props.bgLabel}]})}}])&&l(t.prototype,e),o&&l(t,o),Object.defineProperty(t,"prototype",{writable:!1}),r}();o.default=n},{}],6:[function(t,e,o){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function c(t,e){return(c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function i(o){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,e=u(o),e=(t=n?(t=u(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments),this);if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var a=wp.element.Component,n=wp.components,s=n.FontSizePicker,b=n.PanelBody,n=function(){var t=r,e=a;if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e);var o,n=i(r);function r(){var t=this,e=r;if(t instanceof e)return n.apply(this,arguments);throw new TypeError("Cannot call a class as a function")}return t=r,(e=[{key:"render",value:function(){var e=this;return React.createElement(b,{title:this.props.title},React.createElement(s,{fontSizes:this.props.fontSizes,value:this.props.selectedFontSize,disableCustomFontSizes:!0,onChange:function(t){e.props.fontPickerCallback(t)}}))}}])&&l(t.prototype,e),o&&l(t,o),Object.defineProperty(t,"prototype",{writable:!1}),r}();o.default=n},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
